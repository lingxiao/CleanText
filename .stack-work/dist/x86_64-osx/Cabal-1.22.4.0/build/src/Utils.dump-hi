
==================== FINAL INTERFACE ====================
2016-08-10 22:11:36.863918 UTC

interface Clean_0pEjWvA4UZU9s2xRj7FCxW:Utils 7102
  interface hash: 80ed5dc7c4325bfb81afb49588b6aa68
  ABI hash: 348a2670cb08ea5909c91faa90dc3309
  export-list hash: 3fc4efaecd64256720e09c6e599e8ade
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 56b9a755d22be00f2eba50f3628a69c7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Utils.awaitWith
  Utils.foldStrip
  Utils.fromByte
  Utils.toByte
module dependencies:
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0* binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH*
                      conduit-1.2.6@condu_45tiELg0iTSBn0FnBSBqZx
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      exceptions-0.8.0.2@excep_8GsEeHgaIks3pVGk6GaELJ ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
                      lifted-base-0.2.3.6@lifte_K3cQFA6mRg85rpDaA9numU
                      mmorph-1.0.4@mmorp_8dNpUU8QFPe77rrwKAb20b
                      monad-control-1.0.0.4@monad_3XCDr1mqlERGZgaxuwJF6b
                      mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      resourcet-1.1.7@resou_5dZgZMYiA0Q8JAIyQrczuN
                      stm-2.4.4@stm_C1kFMnPqFjvDhFjgMZGUpr
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh*
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      transformers-base-0.4.4@trans_88TAFm21vtn2NrYUppy50c
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         stm-2.4.4@stm_C1kFMnPqFjvDhFjgMZGUpr:Control.Monad.STM
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         monad-control-1.0.0.4@monad_3XCDr1mqlERGZgaxuwJF6b:Control.Monad.Trans.Control
                         resourcet-1.1.7@resou_5dZgZMYiA0Q8JAIyQrczuN:Control.Monad.Trans.Resource.Internal
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString 4fc4526fe2a6e2567922115e2a8a149a
import  -/  bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Internal 568a1a8b80fb4a973e45859a280b36aa
import  -/  conduit-1.2.6@condu_45tiELg0iTSBn0FnBSBqZx:Data.Conduit cd5127c45231ea2e82d112a4aaffdf9a
import  -/  conduit-1.2.6@condu_45tiELg0iTSBn0FnBSBqZx:Data.Conduit.Internal.Conduit f68c93bdcb6494880795c8de960f6035
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text e74c40da976ee643cb7d3cc6a9b83643
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Encoding b9b030baaf4624a212b50429498f5c59
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Internal 9962d17090d0f709d927f3301e17e973
9bdad230ad3e9deaadeddb5f492c0266
  $wa ::
    GHC.Base.Monad m =>
    (i -> o)
    -> forall b.
       (() -> Data.Conduit.Internal.Pipe.Pipe i i o () m b)
       -> (# i -> Data.Conduit.Internal.Pipe.Pipe i i o () m b,
             () -> Data.Conduit.Internal.Pipe.Pipe i i o () m b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(U),A)><L,C(U)><L,C(U)>, Inline: [0] -}
c8d7555a61b0fc6db758b74e49aea301
  $wfoldStrip ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
50b10b0fb6046752261372412c1edb2f
  awaitWith ::
    GHC.Base.Monad m =>
    (i -> o) -> Data.Conduit.Internal.Conduit.Conduit i m o
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(U),A)><L,C(U)><L,C(U)>m2,
     Unfolding: InlineRule (0, True, True)
                Utils.awaitWith1
                  `cast`
                (forall i o (m :: * -> *).
                 <GHC.Base.Monad m>_R
                 ->_R <i -> o>_R
                 ->_R Sym (Data.Conduit.Internal.Conduit.NTCo:ConduitM[0]
                               <i>_N <o>_N <m>_N <()>_R)) -}
65ac1f027a7730f281dc00835b031ec5
  awaitWith1 ::
    GHC.Base.Monad m =>
    (i -> o)
    -> forall b.
       (() -> Data.Conduit.Internal.Pipe.Pipe i i o () m b)
       -> Data.Conduit.Internal.Pipe.Pipe i i o () m b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(U),A)><L,C(U)><L,C(U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ i
                   @ o
                   @ (m :: * -> *)
                   w :: GHC.Base.Monad m
                   w1 :: i -> o
                   @ b
                   w2 :: () -> Data.Conduit.Internal.Pipe.Pipe i i o () m b ->
                 case Utils.$wa @ i @ o @ m w w1 @ b w2 of ww { (#,#) ww1 ww2 ->
                 Data.Conduit.Internal.Pipe.NeedInput
                   @ i
                   @ i
                   @ o
                   @ ()
                   @ m
                   @ b
                   ww1
                   ww2 }) -}
e5e7c26034b95409cc7cae9e3434036a
  foldStrip :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Data.Text.Internal.Text ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Utils.$wfoldStrip ww1 ww2 ww3 }) -}
058676099030068d18fb403e73c49f77
  fromByte ::
    GHC.Base.Monad m =>
    Data.Conduit.Internal.Conduit.Conduit
      Data.ByteString.Internal.ByteString m Data.Text.Internal.Text
  {- Arity: 2, Strictness: <L,U(A,A,A,C(U),A)>,
     Unfolding: InlineRule (0, True, True)
                Utils.fromByte1
                  `cast`
                (forall (m :: * -> *).
                 <GHC.Base.Monad m>_R
                 ->_R Sym (Data.Conduit.Internal.Conduit.NTCo:ConduitM[0]
                               <Data.ByteString.Internal.ByteString>_N
                               <Data.Text.Internal.Text>_N
                               <m>_N
                               <()>_R)) -}
22846f435fd738e89c8ae0eaa818c494
  fromByte1 ::
    GHC.Base.Monad m =>
    forall b.
    (()
     -> Data.Conduit.Internal.Pipe.Pipe
          Data.ByteString.Internal.ByteString
          Data.ByteString.Internal.ByteString
          Data.Text.Internal.Text
          ()
          m
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.ByteString.Internal.ByteString
         Data.ByteString.Internal.ByteString
         Data.Text.Internal.Text
         ()
         m
         b
  {- Arity: 2, Strictness: <L,U(A,A,A,C(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (m :: * -> *)
                   $dMonad :: GHC.Base.Monad m
                   @ b
                   eta :: ()
                          -> Data.Conduit.Internal.Pipe.Pipe
                               Data.ByteString.Internal.ByteString
                               Data.ByteString.Internal.ByteString
                               Data.Text.Internal.Text
                               ()
                               m
                               b ->
                 Utils.awaitWith1
                   @ Data.ByteString.Internal.ByteString
                   @ Data.Text.Internal.Text
                   @ m
                   $dMonad
                   Data.Text.Encoding.decodeUtf8
                   @ b
                   eta) -}
7e4d398e16a3d26c336b14306dfe841f
  toByte ::
    GHC.Base.Monad m =>
    Data.Conduit.Internal.Conduit.Conduit
      Data.Text.Internal.Text m Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <L,U(A,A,A,C(U),A)>,
     Unfolding: InlineRule (0, True, True)
                Utils.toByte1
                  `cast`
                (forall (m :: * -> *).
                 <GHC.Base.Monad m>_R
                 ->_R Sym (Data.Conduit.Internal.Conduit.NTCo:ConduitM[0]
                               <Data.Text.Internal.Text>_N
                               <Data.ByteString.Internal.ByteString>_N
                               <m>_N
                               <()>_R)) -}
02534899d6d5be84a3bb7e1089526ef4
  toByte1 ::
    GHC.Base.Monad m =>
    forall b.
    (()
     -> Data.Conduit.Internal.Pipe.Pipe
          Data.Text.Internal.Text
          Data.Text.Internal.Text
          Data.ByteString.Internal.ByteString
          ()
          m
          b)
    -> Data.Conduit.Internal.Pipe.Pipe
         Data.Text.Internal.Text
         Data.Text.Internal.Text
         Data.ByteString.Internal.ByteString
         ()
         m
         b
  {- Arity: 2, Strictness: <L,U(A,A,A,C(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (m :: * -> *)
                   $dMonad :: GHC.Base.Monad m
                   @ b
                   eta :: ()
                          -> Data.Conduit.Internal.Pipe.Pipe
                               Data.Text.Internal.Text
                               Data.Text.Internal.Text
                               Data.ByteString.Internal.ByteString
                               ()
                               m
                               b ->
                 Utils.awaitWith1
                   @ Data.Text.Internal.Text
                   @ Data.ByteString.Internal.ByteString
                   @ m
                   $dMonad
                   Data.Text.Encoding.encodeUtf8
                   @ b
                   eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

